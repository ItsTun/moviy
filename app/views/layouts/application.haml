!!!
%html
  %head
    / Global site tag (gtag.js) - Google Analytics
    %script{:async => "", :src => "https://www.googletagmanager.com/gtag/js?id=UA-157805825-1"}
    :javascript
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-157805825-1');
    %script{:async => "", "data-ad-client" => "ca-pub-6082234144223346", :src => "https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"}
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:charset => "utf-8"}/
    -# %link{:href => "../assets/img/apple-icon.png", :rel => "apple-touch-icon", :sizes => "76x76"}/
    -# %link{:href => "../assets/img/favicon.png", :rel => "icon", :type => "image/png"}/
    %meta{:content => "IE=edge,chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %title EasyMoviy
    %meta{:content => "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0", :name => "viewport"}/
    / Fonts and icons
    %link{:href => "https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:400,700|Material+Icons", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css", :rel => "stylesheet"}/
    %title Easymoviy
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload'
    = javascript_pack_tag 'application', 'data-turbolinks-track': 'reload'
  %body.index-page
    = render 'layouts/navigation', cache: true
    = yield :head
    .container.home
      = yield
    = render 'layouts/footer', cache: true
  :javascript
    window.fbAsyncInit = function() {
      FB.init({
        appId      : '275489226946059',
        cookie     : true,                     // Enable cookies to allow the server to access the session.
        xfbml      : true,                     // Parse social plugins on this webpage.
        version    : 'v6.0'           // Use this Graph API version for this call.
      });

      FB.getLoginStatus((response) => {
        if (response.status === 'connected') {
          //user is authorized
          document.getElementById('loginBtn').style.display = 'none';
          sessionCreate();
        } else {
          //user is not authorized
        }
      });
    };


    (function(d, s, id) {                      // Load the SDK asynchronously
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "https://connect.facebook.net/en_US/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    function facebookLogin(){
        FB.login(function(response) {
          if (response.status === 'connected') {
            sessionCreate(response);
          // Logged into your webpage and Facebook.
        } else {
          // The person is not logged into your webpage or we are unable to tell.
        }
      }, {scope: 'public_profile,email'});
    }

    function sessionCreate(auth) {                      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.
      console.log('Welcome!  Fetching your information.... ');
      FB.api('/me',{fields: 'name,email'}, function(response) {
        var authResponse = auth.authResponse;

        $.ajax({
          url: "/users/sign_in",
          type: "POST",
          data: {oauth_token: authResponse.accessToken, uid: authResponse.userID,
                name: response.name, email: response.email},
          success: function (data) {
          }
        });
        document.getElementById('status').innerHTML =
          'Thanks for logging in, ' + response.name + '!';
      });
    }



